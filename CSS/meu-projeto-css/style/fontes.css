/*TIPOS DE FONTES*/
exemplo1 {
    font-family: Georgia, 'Times New Roman', Times, serif;
}

exemplo2 {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/**/

/* - TAMANHO DE FONTE - */

/*
Pixels (px): Os pixels são uma unidade fixa e fornecem controle preciso sobre o tamanho do texto. No entanto, o uso de pixels 
pode limitar a flexibilidade e a acessibilidade, pois não permite que os usuários ajustem facilmente o tamanho do texto nos navegadores.
*/
p {
    font-size: 16px;
}

/*
Em: A unidade em é relativa ao tamanho da fonte do elemento pai. Isso é útil para criar designs escaláveis e manter a harmonia tipográfica.  
Assim,1em é igual ao tamanho da fonte do elemento pai. Se um elemento tem um tamanho de fonte de 16px definido pelo pai 
e você define font-size: 1.5em, então o tamanho da fonte do elemento será 24px. Veja um exemplo no quadro abaixo:
*/
p {
    font-size: 1.5em;
    /* 150% do tamanho da fonte do elemento pai */
}

/*
Rem (Root EM): Diferentemente da unidade em, que é relativa ao tamanho da fonte do elemento pai, rem é sempre calculada em relação ao tamanho 
da fonte definido no elemento raiz (<html>). Isso torna rem particularmente útil para garantir a consistência ao longo de um design, 
evitando os efeitos cumulativos que podem ocorrer com o uso de em em elementos aninhados. 
*/
html {
    font-size: 16px;
    /*Define o tamanho da fonte base para todo o documento*/
}

body {
    font-size: 1rem;
    /* Igual a 16px */
    margin: 0.5rem;
    /* 8px */
}

h1 {
    font-size: 2rem;
    /* 32px */
}

/*
Percentual (%): Define o tamanho da fonte como uma porcentagem do tamanho da fonte do elemento pai. Isso é similar ao em, mas especificado como uma porcentagem.
*/
p {
    font-size: 20%;
    /* 150% do tamanho da fonte do elemento pai */
}

/*
Viewport units: O termo "viewport" refere-se à área visível utilizada para exibir o conteúdo web em um dispositivo. 
No contexto do CSS, o viewport representa a parte da janela do navegador onde o conteúdo da página é exibido. 
Assim, as viewport units vinculam o tamanho da fonte às dimensões da viewport. 

1vw é igual a 1% da largura da viewport. 
1vh é igual a 1% da altura da viewport.
*/
h1 {
    font-size: 5vw;
    /* O tamanho da fonte é 5% da largura da viewport */
}

/* PESO DA FONTE */

/*
A propriedade font-weight é usada para definir a espessura, ou o peso, do texto de um elemento. 
Isso afeta o quão grosso ou fino os caracteres aparecem em uma tela ou impressão.

Palavras-chave Normais: 
normal: O peso normal do texto, geralmente equivalente a 400.
bold: Texto em negrito, geralmente equivalente a 700.

Valores Numéricos:
100, 200, 300: Pesos de fonte mais finos.
500, 600: Pesos de fonte um pouco mais grossos que o normal.
800, 900: Pesos de fonte muito grossos, mais do que bold.
Valores Relativos:
bolder e lighter: Estes valores ajustam o peso da fonte para ser mais pesado ou mais leve, respectivamente, em relação ao peso herdado do elemento pai.


*/

/* ESTILO DE FONTES */

/*
A propriedade font-style é utilizada para definir o estilo da fonte de um texto.


normal: Este é o valor padrão, indicando que o texto deve ser exibido em estilo normal, sem itálico ou oblíquo.

italic: Aplica um estilo itálico ao texto. Este estilo é geralmente usado para enfatizar uma palavra ou frase dentro de um contexto maior de texto.

oblique: Também inclina o texto, mas não necessariamente no mesmo estilo que a fonte itálica específica projetada pelo tipógrafo. 
Em muitos casos, se uma fonte itálica não está disponível, um navegador pode simular o estilo itálico inclinando a fonte normal. Isso é o que oblique faz.

oblique <angle>: Você pode especificar um ângulo para o texto oblíquo. Por exemplo, oblique 15deg inclina o texto em um ângulo de 15 graus. 
Esta capacidade oferece mais controle sobre o grau de inclinação do texto.

*/

/* ALINHAMENTO DE TEXTO */

/*
A propriedade text-align é usada para definir o alinhamento horizontal do texto dentro de um elemento.


left: Alinha o texto à esquerda do contêiner. Este é o valor padrão para a maioria dos idiomas que são escritos da esquerda para a direita.

right: Alinha o texto à direita do contêiner. Comumente usado em idiomas que são escritos da direita para a esquerda, mas também pode 
ser usado para estilização em idiomas da esquerda para a direita.

center: Centraliza o texto dentro do contêiner. Frequentemente usado para cabeçalhos, títulos ou qualquer elemento textual que você deseja 
destacar no meio da página.

justify: Estica as linhas de texto de modo que ambas as extremidades do texto se encaixem exatamente nas bordas esquerda e direita do contêiner. 
Isso cria um bloco visual uniforme de texto, semelhante ao que é visto em colunas de jornais.

start e end: Alinha o texto ao início ou ao fim da linha base, respectivamente. 
*/

/* ESPAÇO ENTRE LINHAS */

/*
line-height é crucial para controlar o espaçamento vertical entre linhas de texto, impactando diretamente a legibilidade e a estética de um documento web.


Número unitário: O mais comum e recomendado, pois é relativo ao tamanho da fonte atual do elemento. Por exemplo, line-height: 1.5; 
significa que a altura da linha é 1,5 vezes o tamanho da fonte do elemento.
Valor com unidades (como px, em, rem): Especifica a altura da linha com uma unidade fixa ou relativa. Por exemplo, line-height: 20px; 
define a altura da linha para 20 pixels.

Porcentagem: Relativa ao tamanho da fonte atual do elemento. Por exemplo, line-height: 150%; também resulta em uma altura de linha que é 
1,5 vezes o tamanho da fonte.
*/

/*DECORAÇÃO DE TEXTO*/

/*
A propriedade text-decoration é usada principalmente para adicionar decoração ao texto de um elemento.
*/
p {
    text-decoration: underline red wavy;
}


/* Transformação de texto */

/*
A propriedade text-transform é usada para alterar a capitalização do texto de um elemento HTML. Ela permite controlar se o texto aparece em letras maiúsculas, minúsculas ou com a primeira letra de cada palavra em maiúscula, entre outras opções. 


none: Não aplica nenhuma transformação ao texto. Este é o valor padrão, onde o texto é exibido como está no HTML.
capitalize: Transforma a primeira letra de cada palavra em maiúscula.
uppercase: Transforma todas as letras do texto em maiúsculas.
lowercase: Transforma todas as letras do texto em minúsculas.
*/


/* CORES */

/*
Estilizar cores no CSS é uma parte essencial do design de uma página web, 
pois as cores influenciam não apenas a estética, mas também a usabilidade e a experiência do usuário. 


Nomes de Cores: CSS suporta nomes de cores como red, green, blue, etc.
Hexadecimais: Representa cores usando valores hexadecimais, como #ff0000 para vermelho.
RGB: Utiliza o modelo RGB (Red, Green, Blue), como em rgb(255, 0, 0) para vermelho.
RGBA: Similar ao RGB, mas adiciona um canal alfa para transparência, por exemplo, rgba(255, 0, 0, 0.5) para vermelho com 50% de transparência.
HSL: Baseia-se em matiz (Hue), saturação (Saturation) e luminosidade (Lightness), como em hsl(0, 100%, 50%) para vermelho.
HSLA: Adiciona um canal alfa à formatação HSL, como em hsla(0, 100%, 50%, 0.5).
*/


/* FUNDOS */

/*
A propriedade background é uma das mais poderosas ferramentas de estilização disponíveis para designers e desenvolvedores, 
permitindo uma ampla gama de efeitos visuais. 
*/

/*
background-color: Define a cor de fundo do elemento. Pode ser um nome de cor, valor hexadecimal, RGB, RGBA, HSL ou HSLA. Veja um exemplo no quadro abaixo:

background-color: #f8f8f8;

---------

background-image: Especifica uma ou mais imagens para usar como fundo. As imagens são colocadas na ordem especificada, e a primeira imagem é colocada na frente. 
Veja um exemplo no quadro abaixo:

background-image: url('image.jpg');

---------

background-repeat: Define como uma imagem de fundo deve ser repetida. Valores comuns incluem repeat, repeat-x, repeat-y, e no-repeat. Veja um exemplo no quadro abaixo:

background-repeat: repeat-x; ->  Repete horizontalmente 

---------

background-position: Especifica a posição inicial da imagem de fundo. Pode ser definida em valores como top, bottom, left, right, centímetros, porcentagens, etc. 
Veja um exemplo no quadro abaixo:

background-position: top right;

---------

background-size: Controla o tamanho da imagem de fundo; os valores podem ser cover (a imagem de fundo cobre completamente o conteúdo), 
contain (a imagem é redimensionada para caber), ou um valor específico (largura e altura). Veja um exemplo no quadro abaixo:

background-size: cover;

---------

background-attachment: Determina se a imagem de fundo é fixa com relação à viewport ou se rola junto com o elemento contendo. Veja um exemplo no quadro abaixo:

background-attachment: fixed;

---------

-> O CSS também suporta gradientes lineares e radiais como valores de background-image:


Gradiente Linear: A cor transita ao longo de uma linha entre dois ou mais pontos. Veja um exemplo no quadro abaixo:

background-image: linear-gradient(to right, red, orange, yellow);

---------

Gradiente Radial: A cor transita radialmente de um ponto central. Veja um exemplo no quadro abaixo:

background-image: radial-gradient(circle, red, yellow, green);

*/